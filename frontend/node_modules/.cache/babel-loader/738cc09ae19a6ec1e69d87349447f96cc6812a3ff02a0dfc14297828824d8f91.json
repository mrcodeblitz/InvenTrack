{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\Documents\\\\My Learnigs - Python\\\\MyParkingSpace\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Handle successful login (e.g., save token, redirect)\n        // Example: localStorage.setItem('token', data.token);\n        // window.location.href = '/home';\n      } else {\n        setError(data.message || 'Login failed');\n      }\n    } catch (err) {\n      setError('Network error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      showProfile: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red',\n            marginTop: '1rem'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginPage, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","username","setUsername","password","setPassword","error","setError","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","err","children","showProfile","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","placeholder","value","onChange","target","style","color","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Rahul/Documents/My Learnigs - Python/MyParkingSpace/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Navbar from '../components/Navbar';\r\n\r\nfunction LoginPage() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password })\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        // Handle successful login (e.g., save token, redirect)\r\n        // Example: localStorage.setItem('token', data.token);\r\n        // window.location.href = '/home';\r\n      } else {\r\n        setError(data.message || 'Login failed');\r\n      }\r\n    } catch (err) {\r\n      setError('Network error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar showProfile={false} />\r\n      <div className=\"login-container\">\r\n        <form onSubmit={handleLogin}>\r\n          <input type=\"text\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} />\r\n          <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n          <button type=\"submit\">Login</button>\r\n          {error && <div style={{ color: 'red', marginTop: '1rem' }}>{error}</div>}\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}